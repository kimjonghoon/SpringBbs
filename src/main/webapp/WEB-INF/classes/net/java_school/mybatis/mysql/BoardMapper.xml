<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.java_school.mybatis.mysql.BoardMapper">

	<select id="selectOneBoard" parameterType="string" resultType="Board">
	    SELECT * FROM board WHERE boardcd = #{boardCd}
	</select>

	<select id="selectAllBoard" resultType="Board">
	    SELECT * FROM board
	</select>
	
	<update id="updateBoard" parameterType="Board">
		UPDATE board SET boardnm = #{boardNm}, boardnm_ko = #{boardNm_ko}
		WHERE boardcd = #{boardCd}
	</update>
	
	<insert id="insertBoard" parameterType="Board">
		INSERT INTO board VALUES (#{boardCd}, #{boardNm}, #{boardNm_ko})
	</insert>
	
	<select id="selectListOfArticles" parameterType="hashmap" resultType="Article">
		SELECT 
			a.articleno, a.title, a.regdate,
			count(distinct(v.no)) hit, 
			count(distinct(f.attachfileno)) attachfileNum, 
			count(distinct(c.commentno)) commentNum
		FROM 
			article as a left join attachfile as f on a.articleno = f.articleno
				left join comments as c on a.articleno = c.articleno
				left join views as v on a.articleno = v.articleNo
		WHERE
			a.boardcd = #{boardCd}
			<if test="searchWord != null and searchWord != ''">
			AND (title LIKE '%${searchWord}%' OR content LIKE '%${searchWord}%')
			</if>
		GROUP BY a.articleno, title, a.regdate
		ORDER BY articleno DESC
		LIMIT ${offset}, ${rowCount}
	</select>

	<select id="selectCountOfArticles" parameterType="hashmap" resultType="int">
		SELECT count(*) FROM article 
		WHERE 
			boardcd = #{boardCd}
			<if test="searchWord != null and searchWord != ''">
			AND (title LIKE '%${searchWord}%' OR content LIKE '%${searchWord}%')
			</if>
	</select>

	<insert id="insert" parameterType="Article" useGeneratedKeys="true" keyProperty="articleNo">
		INSERT INTO article (boardcd, title, content, email, hit, regdate)
		VALUES
		(#{boardCd}, #{title}, #{content}, #{email}, 0, now())
	</insert>
	
	<insert id="insertAttachFile" parameterType="AttachFile">
		INSERT INTO attachfile (filename, filetype, filesize, articleno, email)
		VALUES
		(#{filename}, #{filetype}, #{filesize}, #{articleNo}, #{email})
	</insert>

	<update id="update" parameterType="Article">
		UPDATE article 
		SET title = #{title}, content = #{content} 
		WHERE articleno = #{articleNo}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM article WHERE articleno = #{articleNo}
	</delete>

	<insert id="insertOneViews" parameterType="hashmap">
		INSERT INTO views (articleNo, ip, yearMonthDayHour) values (#{articleNo}, #{ip}, #{yearMonthDayHour})
	</insert>

	<select id="selectOne" parameterType="int" resultType="Article">
		SELECT 
			a.articleno,
			title,
			content,
			a.email,
			ifNull(name, 'Anonymous') name,
			regdate
		FROM 
			article as a left join member as m on a.email = m.email
		WHERE 
			a.articleno = #{articleNo}
	</select>

	<select id="selectNextOne" parameterType="hashmap" resultType="Article">
		SELECT articleno, title 
		FROM article 
		WHERE 
			boardCd = #{boardCd} 
			AND articleno &gt; #{articleNo}
		<if test="searchWord != null and searchWord != ''">
			AND (title LIKE '%${searchWord}%' OR content LIKE '%${searchWord}%')
		</if> 
		ORDER BY articleno
		LIMIT 1
	</select>
	
	<select id="selectPrevOne" parameterType="hashmap" resultType="Article">
		SELECT articleno, title 
		FROM article 
		WHERE 
			boardCd = #{boardCd} 
			AND articleno &lt; #{articleNo}
		<if test="searchWord != null and searchWord != ''">
			AND (title LIKE '%${searchWord}%' OR content LIKE '%${searchWord}%')
		</if> 
		ORDER BY articleno DESC
		LIMIT 1
	</select>

	<select id="selectListOfAttachFiles" parameterType="int" resultType="AttachFile">
		SELECT 
			attachfileno,
			filename,
			filetype,
			filesize,
			articleno,
			email 
		FROM attachfile 
		WHERE articleno = #{articleNo} 
		ORDER BY attachfileno
	</select>

	<delete id="deleteFile" parameterType="int">
		DELETE FROM attachfile WHERE attachfileno = #{attachFileNo}
	</delete>

	<insert id="insertComment" parameterType="Comment">
		INSERT INTO comments (articleno, email, memo, regdate)
		VALUES (#{articleNo}, #{email}, #{memo}, now())
	</insert>

	<update id="updateComment" parameterType="Comment">
		UPDATE comments SET memo = #{memo} WHERE commentno = #{commentNo}
	</update>
	
	<delete id="deleteComment" parameterType="int">
		DELETE FROM comments WHERE commentno = #{commentNo}
	</delete>

	<select id="selectListOfComments" parameterType="int" resultType="Comment">
		SELECT 
			commentno, 
			articleno, 
			c.email, 
			ifNull(name, 'Anonymous') name,
			memo, 
			regdate
		FROM comments as c left join member as m on c.email = m.email
		WHERE 
			articleno = #{articleNo}
		ORDER BY commentno DESC
	</select>

	<select id="selectOneAttachFile" parameterType="int" resultType="AttachFile">
		SELECT
			attachfileno,
			filename,
			filetype,
			filesize,
			articleno,
			email
		FROM
			attachfile
		WHERE
			attachfileno = #{attachfileno}
	</select>

	<select id="selectOneComment" parameterType="int" resultType="Comment">
		SELECT 
			commentno,
			articleno,
			email,
			memo,
			regdate 
		FROM comments 
		WHERE
			commentno = #{commentNo}
	</select>

	<select id="selectCountOfViews" parameterType="int" resultType="int">
		SELECT count(*) FROM views 
		WHERE 
			articleNo = #{articleNo}
	</select>

 </mapper>